From fdcde8f0a2b1d48bdd9b518c897892420b47fa11 Mon Sep 17 00:00:00 2001
From: deepti-tech <singhdeepti311@gmail.com>
Date: Tue, 7 Nov 2023 18:43:10 +0530
Subject: [PATCH] Changes made to meet the requirements

---
 src/App.tsx   | 26 +++++++++++++++++++-------
 src/Graph.tsx | 29 ++++++++++++++++++-----------
 2 files changed, 37 insertions(+), 18 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..6c6d00a 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false,
     };
   }
 
@@ -29,19 +31,29 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
-    return (<Graph data={this.state.data}/>)
+    if(this.state.showGraph){
+      return (<Graph data={this.state.data}/>)
+    }
   }
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
-    DataStreamer.getData((serverResponds: ServerRespond[]) => {
-      // Update the state by creating a new array of data that consists of
-      // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
-    });
-  }
+    let x = 0;
+    const interval = setInterval(() => {
+        DataStreamer.getData((serverResponds: ServerRespond[]) => {
+            this.setState({
+                data: serverResponds,
+                showGraph: true
+            });
+        });
+        x++;
+        if (x > 1000) {
+            clearInterval(interval);
+        }
+    }, 100);
+}
 
   /**
    * Render the App react component
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..d4f9d9d 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement {
   load: (table: Table) => void,
 }
 
@@ -32,25 +32,32 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
-      timestamp: 'date',
+        stock: 'string',
+        top_ask_price: 'float',
+        top_bid_price: 'float',
+        timestamp: 'date',
     };
 
     if (window.perspective && window.perspective.worker()) {
-      this.table = window.perspective.worker().table(schema);
+        this.table = window.perspective.worker().table(schema);
     }
     if (this.table) {
-      // Load the `table` in the `<perspective-viewer>` DOM reference.
+        // Load the `table` in the `<perspective-viewer>` DOM reference.
 
-      // Add more Perspective configurations here.
-      elem.load(this.table);
+        // Add more Perspective configurations here.
+        elem.load(this.table);
+        elem.setAttribute("view", "y_line");
+        elem.setAttribute("column-pivots", '["stock"]');
+        elem.setAttribute("row_pivots", '["timestamp"]');
+        elem.setAttribute("columns", '["top_ask_price"]');
+        elem.setAttribute("aggregates",
+            '{"stock":"distinct_count", "top_ask_price":"avg", "top_bid_price":"avg", "timestamp":"distinct_count"}'
+        );
     }
-  }
+}
 
   componentDidUpdate() {
     // Everytime the data props is updated, insert the data into Perspective table
-- 
2.41.0.windows.1

